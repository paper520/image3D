/*!
* image3D - üçä ‰ΩøÁî®webGLÁªòÂà∂‰∏âÁª¥ÂõæÁâá„ÄÇDrawing three-dimensional images using webGL.
* git+https://github.com/yelloxing/image3D.git
*
* author ÂøÉÂè∂
*
* version 2.0.5-alpha
*
* build Thu Apr 11 2019
*
* Copyright yelloxing
* Released under the MIT license
*
* Date:Sat Jan 11 2020 20:29:15 GMT+0800 (GMT+08:00)
*/

"use strict";var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(r){return typeof r}:function(r){return r&&typeof Symbol==="function"&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r};(function(){"use strict";var f=function r(t,n,e){var i=t.createShader(n);if(i==null)throw new Error("Unable to create shader!");t.shaderSource(i,e);t.compileShader(i);if(!t.getShaderParameter(i,t.COMPILE_STATUS))throw new Error("Failed to compile shader:"+t.getShaderInfoLog(i));return i};var o=function r(t,n,e){var i=f(t,t.VERTEX_SHADER,n),o=f(t,t.FRAGMENT_SHADER,e);var a=t.createProgram();t.attachShader(a,i);t.attachShader(a,o);t.linkProgram(a);if(!t.getProgramParameter(a,t.LINK_STATUS))throw new Error("Failed to link program: "+t.getProgramInfoLog(a));t.useProgram(a);return a};var a=function r(t,n){var e=t.createBuffer(),i=n?t.ELEMENT_ARRAY_BUFFER:t.ARRAY_BUFFER;t.bindBuffer(i,e);return e};var m=function r(t,n,e,i){var o=i?t.ELEMENT_ARRAY_BUFFER:t.ARRAY_BUFFER;t.bufferData(o,n,e)};var E=function r(t,n,e,i,o,a,f){t.vertexAttribPointer(n,e,i,f||false,o||0,a||0);t.enableVertexAttribArray(n)};var c=function r(t,n,e,i){var o=t.createTexture();if(i=="2d"){e=e||0;t.activeTexture(t["TEXTURE"+e])}t.bindTexture(n,o);return o};var g=function r(t,n,e,i,o,a){i={rgb:t.RGB,rgba:t.RGBA,alpha:t.ALPHA}[i]||t.RGBA;t.texImage2D(n,e||0,i,i,{}[o]||t.UNSIGNED_BYTE,a)};var l=function r(t,n,e,i,o,a,f,u,c){i={rgb:t.RGB,rgba:t.RGBA,alpha:t.ALPHA}[i]||t.RGBA;e=e||0;o={}[o]||t.UNSIGNED_BYTE;var s=[t.TEXTURE_CUBE_MAP_POSITIVE_X,t.TEXTURE_CUBE_MAP_NEGATIVE_X,t.TEXTURE_CUBE_MAP_POSITIVE_Y,t.TEXTURE_CUBE_MAP_NEGATIVE_Y,t.TEXTURE_CUBE_MAP_POSITIVE_Z,t.TEXTURE_CUBE_MAP_NEGATIVE_Z],m=void 0,E=void 0;for(m=0;m<s.length;m++){E=s[m];t.texImage2D(E,e,i,f,u,0,i,o,null);t.bindTexture(n,c);t.texImage2D(E,e,i,i,o,a[m])}t.generateMipmap(n)};function u(f){return{setAttribute1f:function r(t,n){var e=f.getAttribLocation(f.program,t);f.vertexAttrib1f(e,n)},setAttribute2f:function r(t,n,e){var i=f.getAttribLocation(f.program,t);f.vertexAttrib2f(i,n,e)},setAttribute3f:function r(t,n,e,i){var o=f.getAttribLocation(f.program,t);f.vertexAttrib3f(o,n,e,i)},setAttribute4f:function r(t,n,e,i,o){var a=f.getAttribLocation(f.program,t);f.vertexAttrib4f(a,n,e,i,o)},setAttribute1i:function r(t,n){var e=f.getAttribLocation(f.program,t);f.vertexAttrib1i(e,n)},setAttribute2i:function r(t,n,e){var i=f.getAttribLocation(f.program,t);f.vertexAttrib2i(i,n,e)},setAttribute3i:function r(t,n,e,i){var o=f.getAttribLocation(f.program,t);f.vertexAttrib3i(o,n,e,i)},setAttribute4i:function r(t,n,e,i,o){var a=f.getAttribLocation(f.program,t);f.vertexAttrib4i(a,n,e,i,o)},setUniform1f:function r(t,n){var e=f.getUniformLocation(f.program,t);f.uniform1f(e,n)},setUniform2f:function r(t,n,e){var i=f.getUniformLocation(f.program,t);f.uniform2f(i,n,e)},setUniform3f:function r(t,n,e,i){var o=f.getUniformLocation(f.program,t);f.uniform3f(o,n,e,i)},setUniform4f:function r(t,n,e,i,o){var a=f.getUniformLocation(f.program,t);f.uniform4f(a,n,e,i,o)},setUniform1i:function r(t,n){var e=f.getUniformLocation(f.program,t);f.uniform1i(e,n)},setUniform2i:function r(t,n,e){var i=f.getUniformLocation(f.program,t);f.uniform2i(i,n,e)},setUniform3i:function r(t,n,e,i){var o=f.getUniformLocation(f.program,t);f.uniform3i(o,n,e,i)},setUniform4i:function r(t,n,e,i,o){var a=f.getUniformLocation(f.program,t);f.uniform4i(a,n,e,i,o)},setUnifromMatrix2fv:function r(t,n){var e=f.getUniformLocation(f.program,t);f.uniformMatrix2fv(e,false,n)},setUnifromMatrix3fv:function r(t,n){var e=f.getUniformLocation(f.program,t);f.uniformMatrix3fv(e,false,n)},setUnifromMatrix4fv:function r(t,n){var e=f.getUniformLocation(f.program,t);f.uniformMatrix4fv(e,false,n)}}}function A(i){var o={byte:i.UNSIGNED_BYTE,short:i.UNSIGNED_SHORT};return{openDeep:function r(){i.enable(i.DEPTH_TEST);return this},points:function r(t,n,e){if(e){i.drawElements(i.POINTS,n,o[e],t)}else{i.drawArrays(i.POINTS,t,n)}return this},lines:function r(t,n,e){if(e){i.drawElements(i.LINES,n,o[e],t)}else{i.drawArrays(i.LINES,t,n)}return this},stripLines:function r(t,n,e){if(e){i.drawElements(i.LINE_STRIP,n,o[e],t)}else{i.drawArrays(i.LINE_STRIP,t,n)}return this},loopLines:function r(t,n,e){if(e){i.drawElements(i.LINE_LOOP,n,o[e],t)}else{i.drawArrays(i.LINE_LOOP,t,n)}return this},triangles:function r(t,n,e){if(e){i.drawElements(i.TRIANGLES,n,o[e],t)}else{i.drawArrays(i.TRIANGLES,t,n)}return this},stripTriangles:function r(t,n,e){if(e){i.drawElements(i.TRIANGLE_STRIP,n,o[e],t)}else{i.drawArrays(i.TRIANGLE_STRIP,t,n)}return this},fanTriangles:function r(t,n,e){if(e){i.drawElements(i.TRIANGLE_FAN,n,o[e],t)}else{i.drawArrays(i.TRIANGLE_FAN,t,n)}return this}}}var T=function r(t,n){var e=["webgl","experimental-webgl","webkit-3d","moz-webgl"],i=null,o=void 0;for(o=0;o<e.length;o++){try{i=t.getContext(e[o],n)}catch(r){}if(i)break}return i};function i(r,t){var s=T(r,t),e={painter:function r(){return A(s)},shader:function r(t,n){s.program=o(s,t,n);return e},buffer:function r(e){a(s,e);var u=void 0,c={write:function r(t,n){n=n||s.STATIC_DRAW;m(s,t,n,e);u=t;return c},use:function r(t,n,e,i,o,a){var f=u.BYTES_PER_ELEMENT;if(typeof t=="string")t=s.getAttribLocation(s.program,t);e=e||0;i=i||0;o=o||s.FLOAT;E(s,t,n,o,e*f,i*f,a);return c}};return c},texture:function f(r,t){var u={"2d":s.TEXTURE_2D,cube:s.TEXTURE_CUBE_MAP}[r];var f=c(s,u,t,r);s.texParameteri(u,s.TEXTURE_MIN_FILTER,s.NEAREST);s.texParameteri(u,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE);s.texParameteri(u,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE);var o={useImage:function r(t,n,e,i){g(s,u,n,e,i,t);return o},useCube:function r(t,n,e,i,o,a){l(s,u,i,o,a,t,n,e,f)}};return o}};var n=u(s);for(var i in n){e[i]=n[i]}return e}function s(r,t){for(var n in t){try{r[n]=t[n]}catch(r){throw new Error("Illegal property key : "+n)}}return r}function v(e,r){return function(n){return new function r(){var t=this;var i=e.buffer(n);this.write=function(r){i.write(r);return t};if(!n){this.use=function(r,t,n,e){i.use(r,t,n,e)};return this}}}}function p(r,t){}function b(r,t){}function e(n,e){e.drawPoint=function(r,t){n.points(r,t);return e};e.drawLine=function(r,t){n.lines(r,t);return e};e.drawStripLine=function(r,t){n.stripLines(r,t);return e};e.drawLoopLine=function(r,t){n.loopLines(r,t);return e};e.drawTriangle=function(r,t){n.triangles(r,t);return e};e.drawStripTriangle=function(r,t){n.stripTriangles(r,t);return e};e.drawFanTriangle=function(r,t){n.fanTriangles(r,t);return e}}function _(e,i){i.elemPoint=function(r,t,n){n=n||"byte";e.points(r,t,n);return i};i.elemLine=function(r,t,n){n=n||"byte";e.lines(r,t,n);return i};i.elemStripLine=function(r,t,n){n=n||"byte";e.stripLines(r,t,n);return i};i.elemLoopLine=function(r,t,n){n=n||"byte";e.loopLines(r,t,n);return i};i.elemTriangle=function(r,t,n){n=n||"byte";e.triangles(r,t,n);return i};i.elemStripTriangle=function(r,t,n){n=n||"byte";e.stripTriangles(r,t,n);return i};i.elemFanTriangle=function(r,t,n){n=n||"byte";e.fanTriangles(r,t,n);return i}}function d(r,t){var n=r.painter();if(t.depth){n.openDeep()}return function(){return new function r(){e(n,this);_(n,this)}}}function L(i,r){return function(e){return new function r(){var t=this;var n=i.texture("2d",e);this.white=function(r){n.useImage(r);return t}}}}function h(t,r){return function(u,c){return new function r(){var a=this;var f=t.texture("cube");this.white=function(r,t,n,e,i,o){f.useCube([r,t,n,e,i,o],u,c);return a}}}}var r=function r(t,n){var e=s({depth:false},n||{});var o=i(t);o.shader(n["vertex-shader"],n["fragment-shader"]);r.fn=r.prototype;r.fn.Buffer=v(o);r.fn.Camera=p();r.fn.Graphic=b();r.fn.Painter=d(o,e);r.fn.Texture2D=L(o);r.fn.TextureCube=h(o);r.fn.setAttributeFloat=function(r,t,n,e,i){o["setAttribute"+(arguments.length-1)+"f"](r,t,n,e,i);return this};r.fn.setAttributeInt=function(r,t,n,e,i){o["setAttribute"+(arguments.length-1)+"i"](r,t,n,e,i);return this};r.fn.setUniformFloat=function(r,t,n,e,i){o["setUniform"+(arguments.length-1)+"f"](r,t,n,e,i);return this};r.fn.setUniformInt=function(r,t,n,e,i){o["setUniform"+(arguments.length-1)+"i"](r,t,n,e,i);return this};r.fn.setUniformMatrix=function(r,t){var n={6:2,9:3,16:4}[t.length];o["setUniformMatrix"+n+"fv"](r,t);return this}};r.core=i;if((typeof module==="undefined"?"undefined":_typeof(module))==="object"&&_typeof(module.exports)==="object"){module.exports=r}else{var t=window.image3D;r.noConflict=function(){if(window.image3D===r){window.image3D=t}return r};window.image3D=r}})();